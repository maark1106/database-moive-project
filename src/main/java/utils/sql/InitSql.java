package utils.sql;

public class InitSql {

    public static final String initial =
            "DROP TABLE IF EXISTS ticket;\r\n"
                    + "DROP TABLE IF EXISTS reservation;\r\n"
                    + "DROP TABLE IF EXISTS member;\r\n"
                    + "DROP TABLE IF EXISTS seat;\r\n"
                    + "DROP TABLE IF EXISTS screening_schedule;\r\n"
                    + "DROP TABLE IF EXISTS screen;\r\n"
                    + "DROP TABLE IF EXISTS movie;"
                    + "CREATE TABLE IF NOT EXISTS member (\n"
                    + "  id BIGINT NOT NULL AUTO_INCREMENT,\n"
                    + "  name VARCHAR(45) NULL DEFAULT NULL,\n"
                    + "  phone_number VARCHAR(45) NULL DEFAULT NULL,\n"
                    + "  email VARCHAR(45) NULL DEFAULT NULL,\n"
                    + "  PRIMARY KEY (id))\n"
                    + "ENGINE = InnoDB;\n"
                    + "CREATE TABLE IF NOT EXISTS movie (\n"
                    + "  id BIGINT NOT NULL AUTO_INCREMENT,\n"
                    + "  title VARCHAR(45) NULL DEFAULT NULL,\n"
                    + "  running_time INT NULL DEFAULT NULL,\n"
                    + "  director VARCHAR(45) NULL DEFAULT NULL,\n"
                    + "  actor VARCHAR(45) NULL DEFAULT NULL,\n"
                    + "  genre VARCHAR(45) NULL DEFAULT NULL,\n"
                    + "  description VARCHAR(45) NULL DEFAULT NULL,\n"
                    + "  release_date DATE NULL DEFAULT NULL,\n"
                    + "  rating DOUBLE NULL DEFAULT NULL,\n"
                    + "  age_limit INT NULL DEFAULT NULL,\n"
                    + "  PRIMARY KEY (id))\n"
                    + "ENGINE = InnoDB;\n"
                    + "CREATE TABLE IF NOT EXISTS reservation (\n"
                    + "  id BIGINT NOT NULL AUTO_INCREMENT,\n"
                    + "  payment_method VARCHAR(45) NULL DEFAULT NULL,\n"
                    + "  payment_status TINYINT NULL DEFAULT NULL,\n"
                    + "  payment_amount INT NULL DEFAULT NULL,\n"
                    + "  payment_date DATE NULL DEFAULT NULL,\n"
                    + "  member_id BIGINT NOT NULL,\n"
                    + "  PRIMARY KEY (id),\n"
                    + "  INDEX fk_reservation_member1_idx (member_id ASC) VISIBLE,\n"
                    + "  CONSTRAINT fk_reservation_member1\n"
                    + "    FOREIGN KEY (member_id)\n"
                    + "    REFERENCES member (id))\n"
                    + "ENGINE = InnoDB;\n"
                    + "CREATE TABLE IF NOT EXISTS screen (\n"
                    + "  id BIGINT NOT NULL AUTO_INCREMENT,\n"
                    + "  seat_count INT NULL DEFAULT NULL,\n"
                    + "  is_used TINYINT NULL DEFAULT NULL,\n"
                    + "  column_seats INT NULL DEFAULT NULL,\n"
                    + "  row_seats INT NULL DEFAULT NULL,\n"
                    + "  PRIMARY KEY (id))\n"
                    + "ENGINE = InnoDB;\n"
                    + "CREATE TABLE IF NOT EXISTS screening_schedule (\n"
                    + "  id BIGINT NOT NULL AUTO_INCREMENT,\n"
                    + "  start_date DATE NULL DEFAULT NULL,\n"
                    + "  day_of_week VARCHAR(45) NULL DEFAULT NULL,\n"
                    + "  round INT NULL DEFAULT NULL,\n"
                    + "  start_time TIME NULL DEFAULT NULL,\n"
                    + "  movie_id BIGINT NOT NULL,\n"
                    + "  screen_id BIGINT NOT NULL,\n"
                    + "  selling_price INT NULL DEFAULT NULL,\n"
                    + "  standard_price INT NULL DEFAULT NULL,\n"
                    + "  PRIMARY KEY (id),\n"
                    + "  INDEX fk_screening_schedule_movie_idx (movie_id ASC) VISIBLE,\n"
                    + "  INDEX fk_screening_schedule_cinema1_idx (screen_id ASC) VISIBLE,\n"
                    + "  CONSTRAINT fk_screening_schedule_cinema1\n"
                    + "    FOREIGN KEY (screen_id)\n"
                    + "    REFERENCES screen (id),\n"
                    + "  CONSTRAINT fk_screening_schedule_movie\n"
                    + "    FOREIGN KEY (movie_id)\n"
                    + "    REFERENCES movie (id))\n"
                    + "ENGINE = InnoDB;\n"
                    + "CREATE TABLE IF NOT EXISTS seat (\n"
                    + "  id BIGINT NOT NULL AUTO_INCREMENT,\n"
                    + "  is_used TINYINT NULL DEFAULT NULL,\n"
                    + "  row_num INT NULL DEFAULT NULL,\n"
                    + "  column_num INT NULL DEFAULT NULL,\n"
                    + "  screen_id BIGINT NOT NULL,\n"
                    + "  screening_schedule_id BIGINT NOT NULL,\n"
                    + "  PRIMARY KEY (id),\n"
                    + "  INDEX fk_seat_screen1_idx (screen_id ASC) VISIBLE,\n"
                    + "  INDEX fk_seat_screening_schedule1_idx (screening_schedule_id ASC) VISIBLE,\n"
                    + "  CONSTRAINT fk_seat_screen1\n"
                    + "    FOREIGN KEY (screen_id)\n"
                    + "    REFERENCES screen (id),\n"
                    + "  CONSTRAINT fk_seat_screening_schedule1\n"
                    + "    FOREIGN KEY (screening_schedule_id)\n"
                    + "    REFERENCES screening_schedule (id)\n"
                    + "    ON DELETE NO ACTION\n"
                    + "    ON UPDATE NO ACTION)\n"
                    + "ENGINE = InnoDB;\n"
                    + "CREATE TABLE IF NOT EXISTS ticket (\n"
                    + "  id BIGINT NOT NULL AUTO_INCREMENT,\n"
                    + "  is_ticketed TINYINT NULL DEFAULT NULL,\n"
                    + "  screening_schedule_id BIGINT NOT NULL,\n"
                    + "  seat_id BIGINT NOT NULL,\n"
                    + "  reservation_id BIGINT NOT NULL,\n"
                    + "  screen_id BIGINT NOT NULL,\n"
                    + "  PRIMARY KEY (id),\n"
                    + "  INDEX fk_ticket_screening_schedule1_idx (screening_schedule_id ASC) VISIBLE,\n"
                    + "  INDEX fk_ticket_seat1_idx (seat_id ASC) VISIBLE,\n"
                    + "  INDEX fk_ticket_reservation1_idx (reservation_id ASC) VISIBLE,\n"
                    + "  INDEX fk_ticket_screen1_idx (screen_id ASC) VISIBLE,\n"
                    + "  CONSTRAINT fk_ticket_reservation1\n"
                    + "    FOREIGN KEY (reservation_id)\n"
                    + "    REFERENCES reservation (id),\n"
                    + "  CONSTRAINT fk_ticket_screen1\n"
                    + "    FOREIGN KEY (screen_id)\n"
                    + "    REFERENCES screen (id),\n"
                    + "  CONSTRAINT fk_ticket_screening_schedule1\n"
                    + "    FOREIGN KEY (screening_schedule_id)\n"
                    + "    REFERENCES screening_schedule (id),\n"
                    + "  CONSTRAINT fk_ticket_seat1\n"
                    + "    FOREIGN KEY (seat_id)\n"
                    + "    REFERENCES seat (id))\n"
                    + "ENGINE = InnoDB;\n"
                    + "INSERT INTO movie (title, running_time, director, actor, genre, description, release_date, rating, age_limit) VALUES\n"
                    + "('기생충', 132, '봉준호', '송강호, 이선균, 조여정', '드라마, 코미디', '두 가족의 이야기를 통해 계급 차이를 그린 영화', '2023-01-30', 8.6, 15),\n"
                    + "('부산행', 118, '연상호', '공유, 정유미, 마동석', '액션, 스릴러', '부산을 향하는 기차 안에서 벌어지는 좀비 사태를 다룬 영화', '2023-02-20', 7.5, 15),\n"
                    + "('올드보이', 120, '박찬욱', '최민식, 유지태', '스릴러, 드라마', '15년 간의 감금 후 복수를 추구하는 남자의 이야기', '2023-03-21', 8.4, 18),\n"
                    + "('괴물', 119, '봉준호', '송강호, 변희봉', '드라마, 공포', '한강에서 나타난 괴물과 한 가족의 싸움을 그린 영화', '2023-04-27', 7.1, 12),\n"
                    + "('추격자', 125, '나홍진', '김윤석, 하정우', '스릴러, 범죄', '전직 형사가 연쇄 살인범을 추격하는 이야기', '2023-05-14', 7.9, 18),\n"
                    + "('베테랑', 123, '류승완', '황정민, 유아인', '액션, 드라마', '부패한 재벌 3세와 맞서 싸우는 형사의 이야기', '2023-06-05', 7.2, 15),\n"
                    + "('아가씨', 144, '박찬욱', '김민희, 하정우', '드라마, 로맨스', '1930년대 일제 강점기를 배경으로 한 미스터리 로맨스', '2023-07-01', 8.1, 18),\n"
                    + "('타짜', 139, '최동훈', '조승우, 김혜수', '드라마, 범죄', '도박으로 세상의 부를 얻으려는 사람들의 이야기', '2023-08-28', 7.3, 18),\n"
                    + "('해운대', 120, '윤제균', '설경구, 하지원', '드라마, 재난', '해운대에 몰아치는 쓰나미를 배경으로 한 재난 영화', '2023-09-22', 5.7, 12),\n"
                    + "('7번방의 선물', 127, '이환경', '류승룡, 박신혜', '드라마, 코미디', '지능 장애인 아버지와 그의 딸 이야기', '2023-10-23', 8.2, 12),\n"
                    + "('왕의 남자', 119, '이준익', '감우성, 정진영', '드라마, 역사', '조선 시대 궁중에서 벌어지는 이야기', '2023-11-29', 7.5, 12),\n"
                    + "('공동경비구역 JSA', 110, '박찬욱', '이병헌, 송강호, 신하균', '드라마, 스릴러', '남북한 접경 지역에서 벌어지는 사건을 다룬 영화', '2023-12-09', 8.3, 15);\n"
                    + "INSERT INTO screen (seat_count, is_used, column_seats, row_seats) VALUES\n"
                    + "(25, 1, 5, 5),\n"
                    + "(25, 1, 5, 5),\n"
                    + "(25, 1, 5, 5),\n"
                    + "(25, 1, 5, 5),\n"
                    + "(25, 1, 5, 5),\n"
                    + "(25, 1, 5, 5),\n"
                    + "(25, 1, 5, 5),\n"
                    + "(25, 1, 5, 5),\n"
                    + "(25, 1, 5, 5),\n"
                    + "(25, 1, 5, 5),\n"
                    + "(25, 1, 5, 5),\n"
                    + "(25, 1, 5, 5);\n"
                    + "INSERT INTO screening_schedule (start_date, day_of_week, round, start_time, movie_id, screen_id, selling_price, standard_price) VALUES\n"
                    + "('2024-06-10', '월요일', 1, '12:00:00', 1, 1, 12000, 10000),\n"
                    + "('2024-06-11', '화요일', 1, '12:00:00', 1, 1, 12000, 10000),\n"
                    + "('2024-06-12', '수요일', 1, '12:00:00', 1, 1, 12000, 10000),\n"
                    + "('2024-06-10', '월요일', 2, '15:00:00', 2, 1, 12000, 10000),\n"
                    + "('2024-06-11', '화요일', 2, '15:00:00', 2, 1, 12000, 10000),\n"
                    + "('2024-06-12', '수요일', 2, '15:00:00', 2, 1, 12000, 10000),\n"
                    + "('2024-06-10', '월요일', 3, '18:00:00', 3, 2, 15000, 12000),\n"
                    + "('2024-06-11', '화요일', 3, '18:00:00', 3, 2, 15000, 12000),\n"
                    + "('2024-06-12', '수요일', 3, '18:00:00', 3, 2, 15000, 12000),\n"
                    + "('2024-06-11', '화요일', 1, '12:00:00', 4, 4, 11000, 9000),\n"
                    + "('2024-06-12', '수요일', 1, '12:00:00', 4, 4, 11000, 9000),\n"
                    + "('2024-06-13', '목요일', 1, '12:00:00', 4, 4, 11000, 9000),\n"
                    + "('2024-06-11', '화요일', 2, '15:00:00', 5, 5, 13000, 11000),\n"
                    + "('2024-06-12', '수요일', 2, '15:00:00', 5, 5, 13000, 11000),\n"
                    + "('2024-06-13', '목요일', 2, '15:00:00', 5, 5, 13000, 11000),\n"
                    + "('2024-06-11', '화요일', 3, '18:00:00', 6, 6, 14000, 12000),\n"
                    + "('2024-06-12', '수요일', 3, '18:00:00', 6, 6, 14000, 12000),\n"
                    + "('2024-06-13', '목요일', 3, '18:00:00', 6, 6, 14000, 12000),\n"
                    + "('2024-06-12', '수요일', 1, '12:00:00', 7, 7, 12000, 10000),\n"
                    + "('2024-06-13', '목요일', 1, '12:00:00', 7, 7, 12000, 10000),\n"
                    + "('2024-06-14', '금요일', 1, '12:00:00', 7, 7, 12000, 10000),\n"
                    + "('2024-06-12', '수요일', 2, '15:00:00', 8, 8, 11000, 9000),\n"
                    + "('2024-06-13', '목요일', 2, '15:00:00', 8, 8, 11000, 9000),\n"
                    + "('2024-06-14', '금요일', 2, '15:00:00', 8, 8, 11000, 9000),\n"
                    + "('2024-06-12', '수요일', 3, '18:00:00', 9, 9, 10000, 8000),\n"
                    + "('2024-06-13', '목요일', 3, '18:00:00', 9, 9, 10000, 8000),\n"
                    + "('2024-06-14', '금요일', 3, '18:00:00', 9, 9, 10000, 8000),\n"
                    + "('2024-06-13', '목요일', 1, '12:00:00', 10, 10, 13000, 11000),\n"
                    + "('2024-06-14', '금요일', 1, '12:00:00', 10, 10, 13000, 11000),\n"
                    + "('2024-06-15', '토요일', 1, '12:00:00', 10, 10, 13000, 11000),\n"
                    + "('2024-06-13', '목요일', 2, '15:00:00', 11, 11, 15000, 12000),\n"
                    + "('2024-06-14', '금요일', 2, '15:00:00', 11, 11, 15000, 12000),\n"
                    + "('2024-06-15', '토요일', 2, '15:00:00', 11, 11, 15000, 12000),\n"
                    + "('2024-06-13', '목요일', 3, '18:00:00', 12, 12, 14000, 12000),\n"
                    + "('2024-06-14', '금요일', 3, '18:00:00', 12, 12, 14000, 12000),\n"
                    + "('2024-06-15', '토요일', 3, '18:00:00', 12, 12, 14000, 12000);\n"
                    + "INSERT INTO seat (is_used, row_num, column_num, screen_id,screening_schedule_id) VALUES\n"
                    + "(1, 1, 1, 1,1),\n"
                    + "(1, 1, 2, 1,2),\n"
                    + "(1, 1, 3, 1,3),\n"
                    + "(1, 1, 4, 2,4),\n"
                    + "(1, 1, 5, 2,5),\n"
                    + "(1, 2, 1, 2,6),\n"
                    + "(1, 2, 2, 3,7),\n"
                    + "(1, 2, 2, 3,8),\n"
                    + "(1, 2, 2, 3,9),\n"
                    + "(1, 2, 2, 4,10),\n"
                    + "(1, 2, 2, 4,11),\n"
                    + "(1, 2, 2, 4,12);\n"
                    + "INSERT INTO member (name, phone_number, email) VALUES\n"
                    + "('김철수', '010-1234-5678', 'chulsoo@example.com'),\n"
                    + "('이영희', '010-2345-6789', 'younghi@example.com'),\n"
                    + "('박지성', '010-3456-7890', 'jisung@example.com'),\n"
                    + "('정수미', '010-4567-8901', 'soomi@example.com'),\n"
                    + "('한민국', '010-5678-9012', 'minguk@example.com'),\n"
                    + "('조은하', '010-6789-0123', 'eunha@example.com'),\n"
                    + "('유재석', '010-7890-1234', 'jaeseok@example.com'),\n"
                    + "('강호동', '010-8901-2345', 'hodong@example.com'),\n"
                    + "('손흥민', '010-9012-3456', 'heungmin@example.com'),\n"
                    + "('배수지', '010-0123-4567', 'suzy@example.com'),\n"
                    + "('이현우', '010-1234-8901', 'hyunwoo@example.com'),\n"
                    + "('정우성', '010-2345-9012', 'woosung@example.com');\n"
                    + "INSERT INTO reservation (payment_method, payment_status, payment_amount, payment_date, member_id) VALUES\n"
                    + "('신용카드', 1, 12000, '2024-06-07', 1),\n"
                    + "('현금', 1, 12000, '2024-06-07', 1),\n"
                    + "('신용카드', 1, 15000, '2024-06-07', 1),\n"
                    + "('현금', 1, 11000, '2024-06-07', 1),\n"
                    + "('신용카드', 1, 13000, '2024-06-07', 1),\n"
                    + "('현금', 1, 14000, '2024-06-07', 1),\n"
                    + "('신용카드', 1, 12000, '2024-06-07', 1),\n"
                    + "('현금', 1, 11000, '2024-06-07', 1),\n"
                    + "('신용카드', 1, 10000, '2024-06-07', 1),\n"
                    + "('현금', 1, 13000, '2024-06-07', 1),\n"
                    + "('신용카드', 1, 15000, '2024-06-07', 1),\n"
                    + "('현금', 1, 14000, '2024-06-07', 1);\n"
                    + "INSERT INTO ticket (is_ticketed, screening_schedule_id, seat_id, reservation_id, screen_id) VALUES\n"
                    + "(1, 1, 1, 1, 1),\n"
                    + "(1, 2, 2, 2, 1),\n"
                    + "(1, 3, 3, 3, 1),\n"
                    + "(1, 4, 4, 4, 2),\n"
                    + "(1, 5, 5, 5, 2),\n"
                    + "(1, 6, 6, 6, 2),\n"
                    + "(1, 7, 7, 7, 3),\n"
                    + "(1, 8, 8, 8, 3),\n"
                    + "(1, 9, 9, 9, 3),\n"
                    + "(1, 10, 10, 10, 4),\n"
                    + "(1, 11, 11, 11, 4),\n"
                    + "(1, 12, 12, 12, 4);\n";
}
